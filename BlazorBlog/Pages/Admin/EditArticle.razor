@page "/admin/editarticle"
@page "/admin/editarticle/{id:int}"
@inject IArticleService ArticleService
@inject NavigationManager NavigationManager
@using TinyMCE.Blazor

@if (loading)
{
    <span>@msg</span>
}
else
{


    @if (article.Editing)
    {
        <h3>Edit "@article.Title"</h3>
    }
    else
    {
        <h3>Create a new Acticle</h3>
    }
    <EditForm Model="article" OnValidSubmit="AddOrUpdateArticle">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <div class="mb-0">
            <label for="title">Title</label>
            <InputText id="title" @bind-Value="article.Title" class="form-control"></InputText>
        </div>
        <div class="mb-0">
            <label for="url">Url</label>
            <InputText id="url" @bind-Value="article.Url" class="form-control"></InputText>
        </div>
        <div class="mb-0">
            <label for="description">Description</label>
            <InputTextArea id="description" @bind-Value="article.Description" class="form-control"></InputTextArea>
        </div>
        <div>
            <label for="content">Content</label>
            <Editor Id="content" Field="()=> article.Content" Conf="@_conf" @bind-Value="article.Content" />
        </div>


        <button type="submit" class="btn btn-primary float-end">@btnText</button>
        <ValidationSummary></ValidationSummary>
    </EditForm>
}


@code {
    [Parameter]
    public int Id { get; set; }
    bool loading = true;
    string btnText = "";
    string msg = "Loading";



    // TinyMCE variable

    private Dictionary<string, object> _conf = new Dictionary<string, object> {
    { "height", 500},
    { "toolbar", "undo redo | a11ycheck casechange blocks | bold italic backcolor forecolor| alignleft aligncenter alignright alignjustify | bullist numlist checklist outdent indent | removeformat | advcode table help | codesample"},
    { "plugins", "advlist autolink lists link image charmap preview anchor searchreplace visualblocks code fullscreen insertdatetime media table code help wordcount codesample"}
  };

    ArticleDto article = new ArticleDto();

    protected override async Task OnParametersSetAsync()
    {
        if (Id == 0)
        {
            article = new ArticleDto { IsNew = true };
            btnText = "Create Article";
        }
        else
        {
            var response = await ArticleService.GetArticleById(Id);
            if (response != null && response.Data != null)
            {
                article = response.Data;
                article.Editing = true;
                btnText = "Update Product";
            }
            else
            {
                msg = $"Article with Id {Id} does not exist!";
            }

        }
        loading = false;
    }

    async void AddOrUpdateArticle()
    {
        if (article.IsNew)
        {
            var createdArticle = await ArticleService.CreatedArticle(article);
            if (createdArticle != null && createdArticle.Data != null)
                article = createdArticle.Data;

            NavigationManager.NavigateTo($"admin/editarticle/{article.Id}", true);
        }
        else
        {
            var updateArticle = await ArticleService.UpdateArticle(article);
            if (updateArticle != null && updateArticle.Data != null)
                article = updateArticle.Data;

            NavigationManager.NavigateTo($"admin/editarticle/{article.Id}", true);
        }




    }
}
